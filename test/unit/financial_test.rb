require_relative '../test_helper'
require 'webmock/test_unit'

class FinancialTest < Test::Unit::TestCase

  TESTING_ENDPOINT = 'http://example-dstu2-server.com'

  def test_connectathon_9_financial_requests

    stub_request(:post, "#{TESTING_ENDPOINT}/Claim").
            with(:body => "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Claim xmlns=\"http://hl7.org/fhir\">\n  <text>\n    <status value=\"generated\"/>\n    <div xmlns=\"http://www.w3.org/1999/xhtml\">A human-readable rendering of the Oral Health Claim</div>\n  </text>\n  <type value=\"oral\"/>\n  <created value=\"2014-08-16\"/>\n  <targetReference>\n    <reference value=\"Organization/2\"/>\n  </targetReference>\n  <organizationReference>\n    <reference value=\"Organization/1\"/>\n  </organizationReference>\n  <use value=\"complete\"/>\n  <priority>\n    <code value=\"normal\"/>\n  </priority>\n  <payee>\n    <type>\n      <code value=\"provider\"/>\n    </type>\n  </payee>\n  <diagnosis>\n    <sequence value=\"1\"/>\n    <diagnosis>\n      <code value=\"123456\"/>\n    </diagnosis>\n  </diagnosis>\n  <patientReference>\n    <reference value=\"Patient/1\"/>\n  </patientReference>\n  <coverage>\n    <sequence value=\"1\"/>\n    <focal value=\"true\"/>\n    <coverageReference>\n      <reference value=\"Coverage/9876B1\"/>\n    </coverageReference>\n  </coverage>\n  <item>\n    <sequence value=\"1\"/>\n    <type>\n      <code value=\"service\"/>\n    </type>\n    <providerReference>\n      <reference value=\"Practitioner/example\"/>\n    </providerReference>\n    <service>\n      <code value=\"1200\"/>\n    </service>\n    <servicedDate value=\"2014-08-16\"/>\n    <unitPrice>\n      <value value=\"135.57\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </unitPrice>\n    <net>\n      <value value=\"135.57\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </net>\n  </item>\n</Claim>\n",
                 :headers => {'Accept'=>'application/xml+fhir', 'Accept-Charset'=>'UTF-8', 'Accept-Encoding'=>'gzip, deflate', 'Content-Length'=>'1535', 'Content-Type'=>'application/xml+fhir;charset=UTF-8', 'Format'=>'application/xml+fhir', 'Resource'=>'FHIR::Claim', 'User-Agent'=>'Ruby FHIR Client'}).
            to_return(:status => 200, :body => "", :headers => {'content-type'=>'application/xml+fhir;charset=UTF-8','last-modified'=>'Wed, 20 Apr 2016 20:08:28 GMT','location'=>"#{TESTING_ENDPOINT}/Claim/1"})

    stub_request(:post, "#{TESTING_ENDPOINT}/Claim").
            with(:body => "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Claim xmlns=\"http://hl7.org/fhir\">\n  <text>\n    <status value=\"generated\"/>\n    <div xmlns=\"http://www.w3.org/1999/xhtml\">A human-readable rendering of the Oral Health Claim</div>\n  </text>\n  <type value=\"oral\"/>\n  <created value=\"2014-08-16\"/>\n  <targetReference>\n    <reference value=\"Organization/2\"/>\n  </targetReference>\n  <organizationReference>\n    <reference value=\"Organization/1\"/>\n  </organizationReference>\n  <use value=\"complete\"/>\n  <priority>\n    <code value=\"normal\"/>\n  </priority>\n  <payee>\n    <type>\n      <code value=\"provider\"/>\n    </type>\n  </payee>\n  <diagnosis>\n    <sequence value=\"1\"/>\n    <diagnosis>\n      <code value=\"123456\"/>\n    </diagnosis>\n  </diagnosis>\n  <patientReference>\n    <reference value=\"Patient/1\"/>\n  </patientReference>\n  <coverage>\n    <sequence value=\"1\"/>\n    <focal value=\"true\"/>\n    <coverageReference>\n      <reference value=\"Coverage/9876B1\"/>\n    </coverageReference>\n  </coverage>\n  <item>\n    <sequence value=\"1\"/>\n    <type>\n      <code value=\"service\"/>\n    </type>\n    <providerReference>\n      <reference value=\"Practitioner/example\"/>\n    </providerReference>\n    <service>\n      <system value=\"http://hl7.org/fhir/oralservicecodes\"/>\n      <code value=\"1200\"/>\n    </service>\n    <servicedDate value=\"2014-08-16\"/>\n    <unitPrice>\n      <value value=\"135.57\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </unitPrice>\n    <net>\n      <value value=\"135.57\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </net>\n  </item>\n  <item>\n    <sequence value=\"2\"/>\n    <type>\n      <code value=\"service\"/>\n    </type>\n    <providerReference>\n      <reference value=\"Practitioner/example\"/>\n    </providerReference>\n    <service>\n      <system value=\"http://hl7.org/fhir/oralservicecodes\"/>\n      <code value=\"21211\"/>\n    </service>\n    <servicedDate value=\"2014-08-16\"/>\n    <unitPrice>\n      <value value=\"105\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </unitPrice>\n    <net>\n      <value value=\"105\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </net>\n    <bodySite>\n      <system value=\"http://fdi.org/fhir/oraltoothcodes\"/>\n      <code value=\"21\"/>\n    </bodySite>\n    <subSite>\n      <system value=\"http://fdi.org/fhir/oralsurfacecodes\"/>\n      <code value=\"L\"/>\n    </subSite>\n  </item>\n  <item>\n    <sequence value=\"3\"/>\n    <type>\n      <code value=\"group\"/>\n    </type>\n    <providerReference>\n      <reference value=\"Practitioner/example\"/>\n    </providerReference>\n    <service>\n      <system value=\"http://hl7.org/fhir/oralservicecodes\"/>\n      <code value=\"27211\"/>\n    </service>\n    <servicedDate value=\"2014-08-16\"/>\n    <unitPrice>\n      <value value=\"1100\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </unitPrice>\n    <net>\n      <value value=\"1100\"/>\n      <system value=\"urn:iso:std:iso:4217\"/>\n      <code value=\"USD\"/>\n    </net>\n    <bodySite>\n      <system value=\"http://fdi.org/fhir/oraltoothcodes\"/>\n      <code value=\"36\"/>\n    </bodySite>\n    <detail>\n      <sequence value=\"1\"/>\n      <type>\n        <code value=\"service\"/>\n      </type>\n      <service>\n        <system value=\"http://hl7.org/fhir/oralservicecodes\"/>\n        <code value=\"27211\"/>\n      </service>\n      <unitPrice>\n        <value value=\"750\"/>\n        <system value=\"urn:iso:std:iso:4217\"/>\n        <code value=\"USD\"/>\n      </unitPrice>\n      <net>\n        <value value=\"750\"/>\n        <system value=\"urn:iso:std:iso:4217\"/>\n        <code value=\"USD\"/>\n      </net>\n    </detail>\n    <detail>\n      <sequence value=\"2\"/>\n      <type>\n        <code value=\"service\"/>\n      </type>\n      <service>\n        <system value=\"http://hl7.org/fhir/oralservicecodes\"/>\n        <code value=\"lab\"/>\n      </service>\n      <unitPrice>\n        <value value=\"350\"/>\n        <system value=\"urn:iso:std:iso:4217\"/>\n        <code value=\"USD\"/>\n      </unitPrice>\n      <net>\n        <value value=\"350\"/>\n        <system value=\"urn:iso:std:iso:4217\"/>\n        <code value=\"USD\"/>\n      </net>\n    </detail>\n  </item>\n</Claim>\n",
                 :headers => {'Accept'=>'application/xml+fhir', 'Accept-Charset'=>'UTF-8', 'Accept-Encoding'=>'gzip, deflate', 'Content-Length'=>'4162', 'Content-Type'=>'application/xml+fhir;charset=UTF-8', 'Format'=>'application/xml+fhir', 'Resource'=>'FHIR::Claim', 'User-Agent'=>'Ruby FHIR Client'}).
            to_return(:status => 200, :body => "", :headers => {'content-type'=>'application/xml+fhir;charset=UTF-8','last-modified'=>'Wed, 20 Apr 2016 20:08:28 GMT','location'=>"#{TESTING_ENDPOINT}/Claim/1"})

    stub_request(:delete, "#{TESTING_ENDPOINT}/Claim/1").
            with(:headers => {'Accept'=>'application/xml+fhir', 'Accept-Charset'=>'UTF-8', 'Accept-Encoding'=>'gzip, deflate', 'Content-Type'=>'application/xml+fhir;charset=UTF-8', 'Id'=>'1', 'Resource'=>'FHIR::Claim', 'User-Agent'=>'Ruby FHIR Client'}).
            to_return(:status => 200, :body => "", :headers => {})

    client = FHIR::Client.new(TESTING_ENDPOINT)
    financial = Crucible::Tests::ConnectathonFinancialTrackTest.new(client)
    financial.tests_subset = financial.tests(['C9F_1A', 'C9F_1B'])
    results = financial.execute_test_methods

    assert !results.blank?, 'Failed to execute ConnectathonFinancialTrackTest.'
    assert results.map {|r| r["status"] }.all? {|s| s=="pass"}, "FinacialTest methods did not execute succesfully: #{results.map {|r| {r["id"] => r["status"]}}}}."
  end

end
