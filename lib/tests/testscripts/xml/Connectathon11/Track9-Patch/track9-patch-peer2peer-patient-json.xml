<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir">
	<id value="track9-patch-peer2peer-patient-json"/>

	<url value="http://wildfhir.aegis.net/fhir/TestScript/track9-patch-peer2peer-patient-json"/>
	<name value="FHIR Connectathon 11 - Track 9 - Patch - Peer to peer test of PATCH for Patient"/>
	<status value="draft"/>
	<publisher value="Cerner, AEGIS.net, Inc."/>
	<contact>
		<name value="Dennis Patterson"/>
		<telecom>
			<system value="email"/>
			<value value="dennis.patterson@cerner.com"/>
			<use value="work"/>
		</telecom>
	</contact>
	<contact>
		<name value="Touchstone Support"/>
		<telecom>
			<system value="email"/>
			<value value="Touchstone_Support@aegis.net"/>
			<use value="work"/>
		</telecom>
	</contact>
	<date value="2016-01-07"/>
	<description value="FHIR Connectathon 11 - Track 9 - Patch - Peer to peer test of PATCH to update the Patient.active value. The client will first perform a Patient search by name to the destination server. Then the client will update the first returned Patient in the returned searchset setting the Patient.active value to false."/>
	<useContext>
		<coding>
			<system value="urn:iso:std:iso:3166"/>
			<code value="US"/>
			<display value="United States of America (the)"/>
		</coding>
	</useContext>
	<requirements value="Patient Read, Search and Patch Operations"/>
	<copyright value="© Cerner 2015+, © AEGIS.net, Inc. 2015+"/>

	<metadata>
		<capability>
			<required value="true"/>
			<description value="Patient read, search and patch operations - patch is currently experimental so there is no formal definition within the conformance statement at this time."/>
			<destination value="1"/>
			<link value="http://hl7.org/fhir/http.html#read"/>
			<link value="http://hl7.org/fhir/http.html#search"/>
			<link value="http://hl7.org/fhir/http.html#update"/>
			<conformance>
				<reference value="/Connectathon11/Track9-Patch/_reference/conformance/PatientSearchType.xml" />
			</conformance>
		</capability>
	</metadata>

	<origin>
		<index value="1" />
		<profile value="FHIR-DSTU2-Client" />
	</origin>
	<destination>
		<index value="1" />
		<profile value="FHIR-DSTU2-Server" />
	</destination>

	<variable>
		<name value="patientId"/>
		<path value="Patient/id" />
		<sourceId value="patient-search-response"/>
	</variable>

	<test id="Step1-SearchForPatient">
		<name value="Step1-SearchForPatient"/>
		<description value="Search for Patients using the criteria name=Chalmers. The first returned Patient will be the one that receives the patch operation."/>

		<action>
			<operation>
				<type>
					<code value="search"/>
				</type>
				<resource value="Patient"/>
				<description value="Search for Patients using the criteria name=Chalmers."/>
				<accept value="json"/>
				<contentType value="json"/>
				<destination value="1" />
				<origin value="1" />
				<params value="?name=Chalmers"/>
				<responseId value="patient-search-response" />
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the client requested a Content-Type of json."/>
				<direction value="request"/>
				<headerField value="Content-Type"/>
				<operator value="contains"/>
				<value value="json"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<direction value="response"/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is JSON."/>
				<direction value="response"/>
				<contentType value="json"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is Bundle."/>
				<direction value="response"/>
				<resource value="Bundle"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that there is at least one record returned. There could be other Patient records returned."/>
				<direction value="response"/>
				<operator value="greaterThan"/>
				<path value="/Bundle/total"/>
				<value value="0"/>
			</assert>
		</action>
	</test>

	<test id="Step2-PatchPatient">
		<name value="Step2-PatchPatient"/>
		<description value="Update the Patient active value to false using PATCH"/>

		<action>
			<operation>
				<type>
					<code value="patch"/>
				</type>
				<resource value="Patient"/>
				<accept value="json"/>
				<contentType value="json"/>
				<destination value="1" />
				<origin value="1" />
				<params value="/${patientId}" />
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the client requested an Accept of json."/>
				<direction value="request"/>
				<headerField value="Accept"/>
				<operator value="contains"/>
				<value value="json"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the client requested a Content-Type of json."/>
				<direction value="request"/>
				<headerField value="Content-Type"/>
				<operator value="contains"/>
				<value value="json"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the patch operation is a replace."/>
				<direction value="request" />
				<path value="$[0].op"/>
				<value value="replace"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the patch is replacing the active element value."/>
				<direction value="request" />
				<path value="$[0].path"/>
				<value value="/active"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the patch is setting the status value to completed."/>
				<direction value="request" />
				<path value="$[0]/value"/>
				<value value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK) or 204(NO CONTENT)."/>
				<direction value="response"/>
				<operator value="in"/>
				<responseCode value="200,204"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="Patient"/>
				<description value="Read the patched Patient back to verify contents."/>
				<accept value="json"/>
				<contentType value="json"/>
				<destination value="1" />
				<params value="/${patientId}" />
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is JSON."/>
				<contentType value="json"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is Patient."/>
				<resource value="Patient"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that response contains the updated Patient. Warning only until this TestScript has been verified accurate."/>
				<operator value="equals"/>
				<path value="Patient/active"/>
				<value value="false"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>
</TestScript>