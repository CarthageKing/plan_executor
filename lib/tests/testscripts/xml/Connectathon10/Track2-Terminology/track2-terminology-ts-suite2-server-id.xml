<TestScript xmlns="http://hl7.org/fhir">
	<id value="track2-terminology-ts-suite2-server-id"/>
	<text>
		<status value="generated"/>
		<div xmlns="http://www.w3.org/1999/xhtml">
			<p>
				Setup: The setup section defines the 7 value sets that are used to test the API 
				functionality. The 7 value sets span common extensional and intensional definition
				styles and consequences.
			</p>
			<p>
				Suite 2: the same 7 suite 1 tests, but with a text filter. The exact effect of 
				the text filter is not specified by FHIR, but the tests require that the number 
				of codes returned is less than that returned by the first set of expansions,
				and that no new codes can be returned that are not contained in the unfiltered
				expansions. A set of candidate matching codes is provided as a suggestive list.
				Note: services can filter by text, or by synonyms / alternate designations etc.
				Any form of text matching can be used. Overview of value sets:
			</p>
			<ul>
				<li>extensional-case-1: An enumeration of codes from a FHIR defined code system</li>
				<li>extensional-case-2: An enumeration of codes from LOINC</li>
				<li>extensional-case-3: An enumeration of codes from SNOMED </li>
				<li>extensional-case-4: An enumeration of codes the crosses code systems, with codes from a FHIR defined value set and the V3 Role code system</li>
				<li>intensional-case-1: A selection of codes from LOINC by their system value</li>
				<li>intensional-case-2: A selection of codes from SNOMED based on subsumption</li>
				<li>intensional-case-3: All clinical findings from SNOMED (based on subsumption) - a value set that is too large to expand</li>
			</ul>
		</div>
	</text>

	<url value="http://wildfhir.aegis.net/fhir2/TestScript/track2-terminology-ts-suite2-server-id"/>
	<name value="FHIR Connectathon 10 - Track 2 - Terminology Services - Suite 2"/>
	<status value="draft"/>
	<description value="FHIR Connectathon 10 - Track 2 - Terminology Services - Suite 2 - Expansion tests for each of the 7 ValueSet fixtures with a text filter. Setup creates the ValueSet resources with server defined resource ids."/>

	<fixture id="extensional-case-1">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/extensional-case-1.xml"/>
		</resource>
	</fixture>
	<fixture id="extensional-case-2">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/extensional-case-2.xml"/>
		</resource>
	</fixture>
	<fixture id="extensional-case-3">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/extensional-case-3.xml"/>
		</resource>
	</fixture>
	<fixture id="extensional-case-4">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/extensional-case-4.xml"/>
		</resource>
	</fixture>
	<fixture id="intensional-case-1">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/intensional-case-1.xml"/>
		</resource>
	</fixture>
	<fixture id="intensional-case-2">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/intensional-case-2.xml"/>
		</resource>
	</fixture>
	<fixture id="intensional-case-3">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/resources/intensional-case-3.xml"/>
		</resource>
	</fixture>

	<fixture id="extensional-case-1-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/extensional-case-1-filter-min.xml"/>
		</resource>
	</fixture>
	<fixture id="extensional-case-2-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/extensional-case-2-filter-min.xml"/>
		</resource>
	</fixture>
	<fixture id="extensional-case-3-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/extensional-case-3-filter-min.xml"/>
		</resource>
	</fixture>
	<fixture id="extensional-case-4-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/extensional-case-4-filter-min.xml"/>
		</resource>
	</fixture>
	<fixture id="intensional-case-1-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/intensional-case-1-filter-min.xml"/>
		</resource>
	</fixture>
	<fixture id="intensional-case-2-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/intensional-case-2-filter-min.xml"/>
		</resource>
	</fixture>
	<fixture id="intensional-case-3-filter-min">
		<resource>
			<reference value="/Connectathon10/Track2-Terminology/_reference/output/intensional-case-2-filter-min.xml"/>
		</resource>
	</fixture>

	<profile id="ValueSetProfile">
		<reference value="http://hl7.org/fhir/StructureDefinition/ValueSet"/>
	</profile>

	<variable>
		<name value="extensional-case-1-id"/>
		<path value="ValueSet/id" />
		<sourceId value="extensional-case-1-create-response"/>
	</variable>
	<variable>
		<name value="extensional-case-2-id"/>
		<path value="ValueSet/id" />
		<sourceId value="extensional-case-2-create-response"/>
	</variable>
	<variable>
		<name value="extensional-case-3-id"/>
		<path value="ValueSet/id" />
		<sourceId value="extensional-case-3-create-response"/>
	</variable>
	<variable>
		<name value="extensional-case-4-id"/>
		<path value="ValueSet/id" />
		<sourceId value="extensional-case-4-create-response"/>
	</variable>
	<variable>
		<name value="intensional-case-1-id"/>
		<path value="ValueSet/id" />
		<sourceId value="intensional-case-1-create-response"/>
	</variable>
	<variable>
		<name value="intensional-case-2-id"/>
		<path value="ValueSet/id" />
		<sourceId value="intensional-case-2-create-response"/>
	</variable>
	<variable>
		<name value="intensional-case-3-id"/>
		<path value="ValueSet/id" />
		<sourceId value="intensional-case-3-create-response"/>
	</variable>

	<setup id="CreateRequiredResources">
		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="extensional-case-1-create-response"/>
				<sourceId value="extensional-case-1"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="extensional-case-2-create-response"/>
				<sourceId value="extensional-case-2"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="extensional-case-3-create-response"/>
				<sourceId value="extensional-case-3"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="extensional-case-4-create-response"/>
				<sourceId value="extensional-case-4"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="intensional-case-1-create-response"/>
				<sourceId value="intensional-case-1"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="intensional-case-2-create-response"/>
				<sourceId value="intensional-case-2"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="create"/>
				</type>
				<accept value="xml"/>
				<contentType value="xml"/>
				<responseId value="intensional-case-3-create-response"/>
				<sourceId value="intensional-case-3"/>
			</operation>
		</action>
		<action>
			<assert>
				<operator value="in"/>
				<responseCode value="201"/>
			</assert>
		</action>
	</setup>

	<test id="2-1-ExpansionFilterExtensionalCase1">
		<name value="Expansion with Filter Test extensional-case-1"/>
		<description value="$expand operation with text filter test for ValueSet extensional-case-1."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet extensional-case-1."/>
				<accept value="xml"/>
				<params value="/${extensional-case-1-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'f' on ValueSet extensional-case-1."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${extensional-case-1-id}/$expand?filter=f"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in extensional-case-1-filter-min."/>
				<minimumId value="extensional-case-1-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<test id="2-2-ExpansionFilterExtensionalCase2">
		<name value="Expansion with Filter Test extensional-case-2"/>
		<description value="$expand operation with text filter test for ValueSet extensional-case-2."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet extensional-case-2."/>
				<accept value="xml"/>
				<params value="/${extensional-case-2-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'mean' on ValueSet extensional-case-2."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${extensional-case-2-id}/$expand?filter=mean"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in extensional-case-2-filter-min."/>
				<minimumId value="extensional-case-2-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<test id="2-3-ExpansionFilterExtensionalCase3">
		<name value="Expansion with Filter Test extensional-case-3"/>
		<description value="$expand operation with text filter test for ValueSet extensional-case-3."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet extensional-case-3."/>
				<accept value="xml"/>
				<params value="/${extensional-case-3-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'fail' on ValueSet extensional-case-3."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${extensional-case-3-id}/$expand?filter=fail"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in extensional-case-3-filter-min."/>
				<minimumId value="extensional-case-3-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<test id="2-4-ExpansionFilterExtensionalCase4">
		<name value="Expansion with Filter Test extensional-case-4"/>
		<description value="$expand operation with text filter test for ValueSet extensional-case-4."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet extensional-case-4."/>
				<accept value="xml"/>
				<params value="/${extensional-case-4-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'f' on ValueSet extensional-case-4."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${extensional-case-4-id}/$expand?filter=f"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in extensional-case-4-filter-min."/>
				<minimumId value="extensional-case-4-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<test id="2-5-ExpansionFilterIntensionalCase1">
		<name value="Expansion with Filter Test intensional-case-1"/>
		<description value="$expand operation with text filter test for ValueSet intensional-case-1."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet intensional-case-1."/>
				<accept value="xml"/>
				<params value="/${intensional-case-1-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'exp' on ValueSet intensional-case-1."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${intensional-case-1-id}/$expand?filter=exp"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in intensional-case-1-filter-min."/>
				<minimumId value="intensional-case-1-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<test id="2-6-ExpansionFilterIntensionalCase2">
		<name value="Expansion with Filter Test intensional-case-2"/>
		<description value="$expand operation with text filter test for ValueSet intensional-case-2."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet intensional-case-2."/>
				<accept value="xml"/>
				<params value="/${intensional-case-2-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'chronic' on ValueSet intensional-case-2."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${intensional-case-2-id}/$expand?filter=chronic"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in intensional-case-2-filter-min."/>
				<minimumId value="intensional-case-2-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<test id="2-7-ExpansionFilterIntensionalCase3">
		<name value="Expansion with Filter Test intensional-case-3"/>
		<description value="$expand operation with text filter test for ValueSet intensional-case-3."/>

		<action>
			<operation>
				<type>
					<code value="read"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test read operation for ValueSet intensional-case-3."/>
				<accept value="xml"/>
				<params value="/${intensional-case-3-id}"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<response value="okay"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<validateProfileId value="ValueSetProfile"/>
			</assert>
		</action>

		<action>
			<operation>
				<type>
					<code value="$expand"/>
				</type>
				<resource value="ValueSet"/>
				<description value="Test $expand operation with text filter 'renin' on ValueSet intensional-case-3."/>
				<accept value="xml"/>
				<encodeRequestUrl value="false"/>
				<params value="/${intensional-case-3-id}/$expand?filter=renin"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<operator value="equals"/>
				<response value="okay"/>
				<warningOnly value="true"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned format is XML."/>
				<contentType value="xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is ValueSet."/>
				<resource value="ValueSet"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned ValueSet minimally contains the information in intensional-case-3-filter-min."/>
				<minimumId value="intensional-case-3-filter-min"/>
				<warningOnly value="true"/>
			</assert>
		</action>
	</test>

	<teardown>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="extensional-case-1-create-response"/>
			</operation>
		</action>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="extensional-case-2-create-response"/>
			</operation>
		</action>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="extensional-case-3-create-response"/>
			</operation>
		</action>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="extensional-case-4-create-response"/>
			</operation>
		</action>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="intensional-case-1-create-response"/>
			</operation>
		</action>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="intensional-case-2-create-response"/>
			</operation>
		</action>
		<action>
			<operation>
				<type>
					<code value="delete"/>
				</type>
				<resource value="ValueSet"/>
				<targetId value="intensional-case-3-create-response"/>
			</operation>
		</action>
	</teardown>
</TestScript>